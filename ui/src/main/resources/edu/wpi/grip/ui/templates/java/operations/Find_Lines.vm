    public static class Line {
        public final double x1, y1, x2, y2;
        public Line(double x1, double y1, double x2, double y2) {
            this.x1 = x1;
            this.y1 = y1;
            this.x2 = x2;
            this.y2 = y2;
        }
        public double lengthSquared() {
            return Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2);
        }
        public double length() {
            return Math.sqrt(lengthSquared());
        }
        public double angle() {
            return Math.toDegrees(Math.atan2(y2 - y1, x2 - x1));
        }
    }

    public static void Find_Lines(Mat input, List<Line> lineList){
        final LineSegmentDetector lsd = Imgproc.createLineSegmentDetector();
        final Mat lines = new Mat();
        if (input.channels() == 1) {
            lsd.detect(input, lines);
        } else {
            // The line detector works on a single channel.  If the input is a color image, we can just give the line
            // detector a grayscale version of it
            final Mat tmp = new Mat();
            Imgproc.cvtColor(input, tmp, Imgproc.COLOR_BGR2GRAY);
            lsd.detect(tmp, lines);
        }

        // Store the lines in the LinesReport object
        lineList = new ArrayList<>();
        if (!lines.empty()) {
            final float[] tmp = new float[4];
            for (int i = 0; i < lines.rows(); i++) {
                lineList.add(new Line(tmp[0], tmp[1], tmp[2], tmp[3]));
            }
        }
    }
