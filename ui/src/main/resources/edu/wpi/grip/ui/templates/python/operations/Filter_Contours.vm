    @staticmethod
    def $tMeth.name($step.name())(inputContours, minArea,minPerimeter, minWidth, maxWidth,
        minHeight, maxHeight, solidity, maxVertexCount, minVertexCount, minRatio, maxRatio):
        output = []
        for contour in inputContours:
            x,y,w,h = cv2.boundingRect(contour)
            if (w < minWidth or w > maxWidth):
                continue
            if (h < minHeight or h > maxHeight):
                continue
            area = cv2.contourArea(contour)
            if (area < minArea):
                continue
            if (cv2.arcLength(contour, True) < minPerimeter):
                continue
            hull = cv2.convexHull(contour)
            solid = 100 * area / cv2.contourArea(hull)
            if (solid < solidity[0] or solid > solidity[1]):
                continue
            if (len(contour) < minVertexCount or len(contour) > maxVertexCount):
                continue
            ratio = (float)(w) / h
            if (ratio < minRatio or ratio > maxRatio):
                continue
            output.append(contour)
        return output