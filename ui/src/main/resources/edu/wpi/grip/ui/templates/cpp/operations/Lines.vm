#if($lines == false)
#set($lines = true)
class Line {
	public:
	double x1, y1, x2, y2;
	Line(double x1, double y1, double x2, double y2) {
		this->x1 = x1;
		this->y1 = y1;
		this->x2 = x2;
		this->y2 = y2;
		}
	double lengthSquared() {
		return pow(x2 - x1, 2) + pow(y2 - y1, 2);
	}
	double length() {
		return sqrt(lengthSquared());
	}
	double angle() {
		return (180*atan2(y2 - y1, x2 - x1)/M_PI);
	}
};
#if(!$loadLib)
extern "C" vector<Vec6d> getLines(string name, AbsPipeline* obj){
	vector<Line> *lines = (vector<Line> *) (obj->*(obj->getOutputs()[name]))();
	vector<Vec6d> out;
	for(int idx = 0; idx<lines->size(); idx++){
		Line l = (*lines)[idx];
		out.push_back(Vec6d(l.x1, l.y1, l.x2, l.y2, l.length(), l.angle()));
	}
	return out;
}
#end
#end