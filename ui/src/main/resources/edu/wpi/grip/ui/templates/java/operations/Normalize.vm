	private enum NormalizeType {
		INF("NORM_INF", Core.NORM_INF),
		L1("NORM_L1", Core.NORM_L1),
		L2("NORM_L2", Core.NORM_L2),
		MINMAX("NORM_MINMAX", Core.NORM_MINMAX);

		private final String label;
		private final int value;

		private NormalizeType(String name, int value) {
			this.label = name;
			this.value = value;
		}

		public static NormalizeType get(String type){
			if(INF.label.equals(type)){
				return INF;
			}
			else if(L1.label.equals(type)){
				return L1;
			}
			else if(L2.label.equals(type)){
				return L2;
			}
			else{
				return MINMAX;
			}
		}

		@Override
		public String toString() {
			return label;
		}
    }
	/**
	 * Normalizes or remaps the values of pixels in an image.
	 *
	 * @param input The image on which to perform the Normalize.
	 * @param type The type of normalization.
	 * @param a The minimum value.
	 * @param b The maximum value.
	 * @param output The image in which to store the output.
	 */
	private void ${step.javaName()}(Mat input, NormalizeType type, double a, double b, Mat output){
		Core.normalize(input, output, a, b, type.value);
	}